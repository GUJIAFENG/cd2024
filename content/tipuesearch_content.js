var tipuesearch = {"pages": [{'title': '關於', 'text': '網頁：\xa0 https://gujiafeng.github.io/cd2024/content/index.html \n 網誌：\xa0\xa0  https://gujiafeng.github.io/cd2024/blog \n 簡報：\xa0\xa0 https://mdecd2024.github.io/2b-midbg8/reveal/ \n 倉儲：\xa0 https://github.com/GUJIAFENG/cd2024 \n 團隊倉儲： https://mdecd2024.github.io/2b-midbg8/content/index.html \n', 'tags': '', 'url': '關於.html'}, {'title': '課程活動', 'text': '', 'tags': '', 'url': '課程活動.html'}, {'title': 'W1建立個人倉儲和網頁，加入團隊github內容', 'text': '', 'tags': '', 'url': 'W1建立個人倉儲和網頁，加入團隊github內容.html'}, {'title': '2b 建個人課程倉儲', 'text': '登入 github.com, 連結到\xa0 https://github.com/mdecycu/cmsimde_site , 利用此倉儲作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁根目錄. \n', 'tags': '', 'url': '2b 建個人課程倉儲.html'}, {'title': '下載可攜套件檔案，將個人倉儲 import 至 Replit', 'text': '下載可攜程式環境，從 Replit 帳號下方的 Account, Connected Services(連線服務區) 點選 Connect 後, 讓 Github 授權 Replit, 將在 Replit 中的倉儲改版後, 有權限推回 Github \n', 'tags': '', 'url': '下載可攜套件檔案，將個人倉儲 import 至 Replit.html'}, {'title': 'w1心得', 'text': '今天是開學的第一堂課，我們這堂課的細節是假設自己的github帳號加入到cd2024中、將自己的網址導入  到replit中，並且設定github的雙重認證，今天的內容還算輕鬆。 \n', 'tags': '', 'url': 'w1心得.html'}, {'title': 'W2分組並建立團隊倉儲和網頁，加入團隊github內容', 'text': 'w2心得：今天要先分組找組員並確認組別，然後用github教室創建組別並把組員加進去，好了之後小組成員就要開 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0始添加github項目的內容了，這一步比較困難當時用了很久了。 \n', 'tags': '', 'url': 'W2分組並建立團隊倉儲和網頁，加入團隊github內容.html'}, {'title': 'W3利用Codespaces將自己github加入團隊倉儲的子模組', 'text': 'cd2024 課程希望將各分組的組員個人網站, 以 submodule 的方式納入各分組倉儲與網站, 設定的指令為: \n git submodule add 組員的個人倉儲網址 組員的學號 \n 例如: 假設組員的 cd2024 個人倉儲位於: https://github.com/scrum-1/cd2024, 且該組員的學號為 41123299, 則該組員必須在進入該組的倉儲目錄後, 執行: \n git submodule add https://github.com/scrum-1/cd2024.git 41123299 \n', 'tags': '', 'url': 'W3利用Codespaces將自己github加入團隊倉儲的子模組.html'}, {'title': 'w3心得', 'text': '這週利用Codespaces把自己github加入到團隊的子模組中，之後也可以利用codspaces來維護倉儲 \n', 'tags': '', 'url': 'w3心得.html'}, {'title': 'W4 Replit 匯入replit_main2.7z來查看靜態網站內容，上傳latex作業', 'text': 'w4心得：今天用codspaces創建資料夾latex、images和.github/workflows並上傳資料並用git add .推好 之後用 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0Action的功能去run，之後再到.gitignore改程序碼讓他去刪除latex的臨時文檔，用好之後 我們這組把已 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0完成的翻譯用成latex傳上去，今天課程活動較上禮拜多一些，今天主要的問題是 Action的ALL\xa0 workflows \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0沒有東西，後來發現我們在codespaces創資料夾的時候沒有打 /workflows，結果這個錯誤讓我們用了好 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0久 。 \n', 'tags': '', 'url': 'W4 Replit 匯入replit_main2.7z來查看靜態網站內容，上傳latex作業.html'}, {'title': 'W5影片分工', 'text': 'w5心得：今天作業是製作逐字稿，我將教學影片用成mp4後，丟到whisper Desktop請他自動產生txt 檔 ，和srt檔 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 之後對照影片確認去對稿，好了之後再用上字幕的軟體將MP4和srt檔丟進去之後就開始播放影片看字幕塊 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 有沒有跟聲音一致，還可以順便校閱第二次稿，好了之後在輸出成mp4檔，這過程還蠻快速的，比自己照 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0影片打字快很多，不過要處理的影片比較多目前還沒用好，之後再貼上去。 \n \n 逐字稿檔案: 逐字稿7 \xa0 逐字稿8 \xa0 逐字稿9 \xa0 逐字稿10 \xa0 逐字稿11 \xa0 逐字稿12 \xa0 逐字稿13 \xa0 逐字稿14 \n 影片字幕:\xa0 8.mp4 \xa0 9.mp4 \xa0 10.mp4 \xa0 11.mp4 \xa0\xa0 12.mp4 \xa0 13.mp4 \xa0 14.mp4 \xa0 \n \n', 'tags': '', 'url': 'W5影片分工.html'}, {'title': 'W6協同NX零組件CoppeliaSim場景模擬相關檔案格式', 'text': 'W6心得:這禮拜課程進度主要修改了團隊main.yml的內容和製作中英並列的論文翻譯，還有下載可攜式的NX檔案 \n 中英並列的論文翻譯: 41039138中英並列論文 \n 個人自評:79 \n 團隊自評:80 \n \n', 'tags': '', 'url': 'W6協同NX零組件CoppeliaSim場景模擬相關檔案格式.html'}, {'title': 'W7回顧課程內容', 'text': '期中自評:79分 \n 自評.txt \n \n \n', 'tags': '', 'url': 'W7回顧課程內容.html'}, {'title': 'W8 補齊進度', 'text': '', 'tags': '', 'url': 'W8 補齊進度.html'}, {'title': 'W9 期中考週', 'text': '', 'tags': '', 'url': 'W9 期中考週.html'}, {'title': 'W10\xa0協同產品設計實習專案', 'text': '第八組分工: \n 41039138:任務二 +\xa0 鋼球平台 \n 41023132:任務三 \n', 'tags': '', 'url': 'W10\xa0協同產品設計實習專案.html'}, {'title': '鋼球平衡台 PID 控制與模擬', 'text': '將文章內容寫成摘要放入個人和分組網誌 \n', 'tags': '', 'url': '鋼球平衡台 PID 控制與模擬.html'}, {'title': '鋼球平衡台 PID 繪製座標與模擬', 'text': '\n 步驟 \n 1. 開啟可攜程式系統中的 CoppeliaSim 2. 開啟鋼球平衡台模擬場景 3. 啟動可攜程式系統, pip install keyboard cbor pyzmq matplotlib 4. 在 SciTE 中執行上列程式, 確定系統穩定後, 按下 q 終止模擬 5. matplotlib 將畫出鋼球在平台上的 x 與 y 座標圖 \n (電腦內建錄影無法錄製多個分頁，所以用其他的軟體錄製，因為是免費版所以有浮水印，這部分請大家見諒) \n \n \n 根據模擬時間的不同圖表會有些差異 \n \n \n \xa0 \xa0 \n \n \n', 'tags': '', 'url': '鋼球平衡台 PID 繪製座標與模擬.html'}, {'title': '心得', 'text': '\n 這次作業利用 PID 控制 CoppeliaSim 鋼球平衡台場景 ZMQ RemoteAPI Python 程式，結束後用matplotlib 畫出來 \n 可藉由改變controlMotor(0.3, 0.3, 0.05) 三個參數實現不同的座標繪製。 \n controlMotor(0.3, 0.3, 0.05) 分別為最終期望的X Y 座標和模擬時間步長，在模擬過程中還發現q鍵按下的時機也會改變座標的圖形剛開始模擬都達不到老師給的圖形後來發現我模擬的時間不夠長，之後再用久一點出來的表就跟老師一樣了。 \n', 'tags': '', 'url': '心得.html'}, {'title': '不同參數比較', 'text': '藉由不同參數模擬出不同的情況 \n \n \xa0 \xa0controlMotor(0.5, 0.3, 0.2)\xa0 \xa0 \xa0 \xa0 \xa0 \n \n \xa0 \n \n controlMotor(0.3, 0.5, 0.2) \n \n \xa0 \xa0 \n \n controlMotor(0.3, 0.3, 0.2)\xa0 \n \n \xa0 \n', 'tags': '', 'url': '不同參數比較.html'}, {'title': 'W11 協同產品設計實習', 'text': 'w11心得:這周要用NX1872畫圖，不過在用USB開NX1872時，去發現他跑不動，所以我現在只能用空閒的時間用學校的電腦畫了，這禮拜我還為每個blog新增了Disqus留言區，不過這部分班上好樣沒甚麼人用這塊，我是在看老師的網頁無意中看到才去用的，不然我一般只會看blog說要做甚麼作業，最近教同學新增Disqus時發現他網誌都有寫但他都沒有用./gen_blog指令導致他都有寫網誌但blog卻沒顯示，這部份是我們常會沒注意的部分，我之前也常常忘記。 \n', 'tags': '', 'url': 'W11 協同產品設計實習.html'}, {'title': 'W12', 'text': '', 'tags': '', 'url': 'W12.html'}, {'title': 'NXOpen 實習項目一', 'text': '利用 NXOpen 程式分別執行建立 block 與挖孔 (透過錄製 Journal 程式產生)後, 請設法將兩個程式合併為一個程式, 可以直接完成建立一個 block 並在其特定面上挖孔. \n', 'tags': '', 'url': 'NXOpen 實習項目一.html'}, {'title': '任務二', 'text': '41039138 將新增團隊倉儲設為2bstud-2bsite的子模組並改名為g8 \n', 'tags': '', 'url': '任務二.html'}, {'title': 'cd2023 足球機器人網際場景模擬', 'text': '從\xa0 https://github.com/mdecd2023/2a3-pj3ag4 \xa0下載該組當時所完成的倉儲資料, 並參考網際手足球機器人場景設計 專案報告, 由各組員分別擔任場景競技球員, 利用鍵盤跨網路操控足球機器人進行球賽競技. \n', 'tags': '', 'url': 'cd2023 足球機器人網際場景模擬.html'}, {'title': 'W13', 'text': '', 'tags': '', 'url': 'W13.html'}, {'title': '課程評分:', 'text': '學員每週編寫網誌內容佔 40% \n 每週上課內容摘要與分組報告執行分工及進度整理 \n 相關資料收集與閱讀心得 \n 分組期中報告佔 20% \n 分組期中 pdf 報告與 mp4 簡報影片 \n 每組至多 8 人 \n 期中報告題目: \n ODOO PLM 在協同產品設計上的應用 - 以鋼球平衡台機電控制系統設計為例 \n 分組期末報告佔 40% \n 分組期末 pdf 報告與 mp4 簡報影片 \n', 'tags': '', 'url': '課程評分:.html'}, {'title': 'W14', 'text': '', 'tags': '', 'url': 'W14.html'}, {'title': '各週指定任務', 'text': 'cd2024 協同產品設計實習課程專案的內容, 主要延續 \xa0 CAD2023 \xa0 課程重點, 然後再透過分組, 利用 Odoo PLM 相關文獻閱讀與應用作為協同產品開發流程的參考, 實際進行鋼球平衡台與綜合球賽機器人模擬系統的協同設計 \n 各週指定任務如下: \n \n \n 個人 cd2024 與分組倉儲的建立及維護. \n \n \n 各分組註冊一個 \xa0 Odoo \xa0 帳號, 選用免費的 PLM 模組, 取得各分組的產品生命週期 管理系統網域, 並將參考論文的協同翻譯流程作為工作項目, 在各分組的 PLM 網域系統中留下任務分配與紀錄, 最終產出為一份 參考論文 的中英文翻譯並列 pdf 檔案, 其中包含各組員的心得報告. \n \n \n 指定在參考論文的翻譯與閱讀過程, 將各組員的 cd2024 課程倉儲納為分組倉儲的子模組, 可以將各組員倉儲中的 \xa0 LaTeX \xa0 原始資料, 整合 至分組倉儲中, 採 Github Actions 或近端使用 \xa0 MikTeX \xa0 建立 分組的參考論文閱讀報告 pdf 檔案 (教學) . \n \n \n 要求各分組採協同方式, 在各 教學影片 上填上字幕並 嵌入個人網站, 分工整理影片逐字稿與教學重點, 最後完成期中自評, 在期中考週將自評 成績送至教務處. \n \n \n 要求 下載 Siemens NX 1872 至個人隨身碟或電腦 (含筆 電), 後續專案系統的零組件繪圖可採電腦輔助設計室固態硬碟所安裝的 NX1872 或隨身碟中的可攜系統, 必須透過連網取得認證後才能開啟. \n \n \n 提醒 \xa0 CoppeliaSim 不同版本中存檔上的差異, 並強調 cd2024 將沿用 cad2023 課程中所使用的 4.5.1 版. \n \n \n 提示 各分組可以利用可攜式 \xa0 Sourcetree \xa0 套件, 在近端充分了解個人倉儲與分組倉儲的各種 改版或解決衝突議題. \n \n \n 在 第七週 摘要出 cd2024 各項分組協同模式的要點及執行方法. \n \n \n 在 第八週 說明如何應用 AI 協助先前閱讀論文, 整理資料以及延伸模擬 程式的方法, 並提出既存鋼球平衡台控制與模擬的實習步驟. \n \n \n 第十週 起, 要求學員完成三項實習任務. (建立倉儲與網站連 結、PID 控制文獻整理、NX 平台零組件繪圖) \n \n \n 第十二週 的三項實習任務 (NXOpen 零組件繪製、分組倉儲設為 評分倉儲子模組、足球機器人場景模擬). \n \n \n', 'tags': '', 'url': '各週指定任務.html'}, {'title': 'W15', 'text': '分工 \n 41023132:零件組裝 \n 41039138:加入接頭 \n 今天把接頭加入並確認會旋轉但還未完成 \n \n \n', 'tags': '', 'url': 'W15.html'}, {'title': 'W16', 'text': '', 'tags': '', 'url': 'W16.html'}, {'title': 'W17', 'text': '實習一 \n \n \n \n \n 實習二  \n 實習三 \n \n \n cd2024_footbasketball_field_specification_step2.ttt \n site.ttt \n # pip install pyzmq cbor keyboard\nfrom zmqRemoteApi import RemoteAPIClient\nfrom zmqRemoteApi_IPv6 import RemoteAPIClient\nimport keyboard\nimport random\nimport math\nimport time\n\n# 創建遠程客戶端\nclient = RemoteAPIClient(\'fe80::510d:5d19:ba9e:3297%14\', 23000)\nprint(\'Program started\')\n# 獲取仿真實例\nsim = client.getObject(\'sim\')\nprint(\'Simulation started\')\n\n# 初始速度和角度\nv = 8\na = 40\n\n# 選擇控制的球員\nplayer = \'/a_player1\'\n\n# 控制機器人速度的函數\ndef setVelocity(lfwV, rfwV, lbwV, rbwV):\n    leftMotor1 = sim.getObject(player + \'/joint_lf\')\n    rightMotor1 = sim.getObject(player + \'/joint_rf\')\n    leftMotor2 = sim.getObject(player + \'/joint_lb\')\n    rightMotor2 = sim.getObject(player + \'/joint_rb\')\n    sim.setJointTargetVelocity(leftMotor1, lfwV)\n    sim.setJointTargetVelocity(rightMotor1, rfwV)\n    sim.setJointTargetVelocity(leftMotor2, lbwV)\n    sim.setJointTargetVelocity(rightMotor2, rbwV)\n\n# 控制機器人角度的函數\ndef setAngle(y):\n    ontology = sim.getObject(player)\n    angle = [-90*math.pi/180, y*math.pi/180, 0*math.pi/180]\n    leftMotor = sim.getObject(player + \'/joint_lf\')\n    rightMotor = sim.getObject(player + \'/joint_rf\')\n    sim.setObjectOrientation(leftMotor, ontology, angle)\n    sim.setObjectOrientation(rightMotor, ontology, angle)\n\n# 控制機器人移動的函數\ndef playerControl(x, y):\n    if keyboard.is_pressed(\'w\'):\n        setVelocity(x, x, x, x)\n        controlAngle(y)\n    elif keyboard.is_pressed(\'s\'):\n        setVelocity(-x, -x, -x, -x)\n        controlAngle(y)\n    elif keyboard.is_pressed(\'a\'):\n        setVelocity(-x, x, -x, x)\n    elif keyboard.is_pressed(\'d\'):\n        setVelocity(x, -x, x, -x)\n    elif keyboard.is_pressed(\'space\'):\n        turnover()\n    elif keyboard.is_pressed(\'q\'):\n        sim.stopSimulation()\n    else:\n        setVelocity(0, 0, 0, 0)\n        setAngle(0)\n\n# 控制角度的函數\ndef controlAngle(y):\n    if keyboard.is_pressed(\'a\'):\n        setAngle(-y)\n    elif keyboard.is_pressed(\'d\'):\n        setAngle(y)\n    else:\n        setAngle(0)\n\n# 讓機器人轉身的函數\ndef turnover():\n    floor = sim.getObject(\'/Floor\')\n    player1 = sim.getObject(player)\n    orientation = sim.getObjectOrientation(player1, floor)\n    position = sim.getObjectPosition(player1, floor)\n    orientation[0] = 0\n    orientation[1] = 0\n    position[2] = 0.3\n    sim.setObjectPosition(player1, floor, position)\n    sim.setObjectOrientation(player1, floor, orientation)\n\n# 检测碰撞的函数\ndef detectCollision():\n    distance = 0.05  # 需要根据实际情况设置\n    # 检查两个机器人之间的距离是否小于0.1mm\n    # 这里仅作示例，实际实现可能需要根据场景调整\n    return distance < 0.1\n\n# 投球的函数\ndef throwBall():\n    print("投籃中...")\n    time.sleep(2)  # 模拟投篮过程，等待2秒\n    if random.random() < 0.8:  # 80%的成功率\n        print("投籃成功！")\n    else:\n        print("投籃失敗！")\n\n# 主循环\nwhile True:\n    if keyboard.is_pressed(\'shift\'):\n        playerControl(v+4, a-20)\n    else:\n        playerControl(v, a)\n\n    # 如果检测到按下 \'j\' 键并且检测到碰撞，则投球\n    if keyboard.is_pressed(\'j\') and detectCollision():\n        throwBall()  # 投球\n', 'tags': '', 'url': 'W17.html'}, {'title': 'Disqus', 'text': '個人blog 添加disqus 範例HTML \n <div id="disqus_thread"></div>\n<script>\n    /**\n    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */\n    /*\n    var disqus_config = function () {\n    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page\'s canonical URL variable\n    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page\'s unique identifier variable\n    };\n    */\n    (function() { // DON\'T EDIT BELOW THIS LINE\n    var d = document, s = d.createElement(\'script\');\n    s.src = \'https://https-github-com-gujiafeng-github-io-cd2024.disqus.com/embed.js\';\n    s.setAttribute(\'data-timestamp\', +new Date());\n    (d.head || d.body).appendChild(s);\n    })();\n</script>\n<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript> \n 團隊blog 添加disqus 範例HTML \n <div id="disqus_thread"></div>\n<script>\n    /**\n    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */\n    /*\n    var disqus_config = function () {\n    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page\'s canonical URL variable\n    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page\'s unique identifier variable\n    };\n    */\n    (function() { // DON\'T EDIT BELOW THIS LINE\n    var d = document, s = d.createElement(\'script\');\n    s.src = \'https://blog-1-4.disqus.com/embed.js\';\n    s.setAttribute(\'data-timestamp\', +new Date());\n    (d.head || d.body).appendChild(s);\n    })();\n</script>\n<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>\n \n 心得 \n 我範例HTML是加在2024-Spring-w1-blog-tutorial.html檔案中，但現在有一個問題就是我gen_blog生成新的網誌時，網誌會還原成預設的，到時候就要每個網誌去重新加入disqus，就會很麻煩，目前還不知道怎麼處理。 \n 2024/05/09 問題已解決(只要在.md嵌入就可以，不必到HTML裡面新增) \n \n \n \n Please enable JavaScript to view the  comments powered by Disqus. \n \n', 'tags': '', 'url': 'Disqus.html'}, {'title': 'odoo', 'text': '協同課程\xa0 odoo PLM 網頁 ，目前還不太會用，只能先把之前的作業用成專案試做看看 \n \xa0 \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'odoo.html'}, {'title': '第八組', 'text': '組長:41039138 凃家豐 \n 組員：41023132 林秉賢 \n', 'tags': '', 'url': '第八組.html'}, {'title': 'Homework', 'text': '翻譯P45-87\xa0  Homwork 個人部分.pdf \n 中英並列\xa0 41039138翻譯中英並列.pdf \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'Cmsimde', 'text': "SMap  - 網站地圖 - 依序排列網站的所有頁面。 \n EditA  - 編輯所有頁面 - 將所有頁面放入編輯模式中，主要用於處理頁面遷移、刪除或決定衝突頁面內容版本。 \n 編輯 -編輯頁面-先選擇要編輯的單一頁面後，再點選編輯，即可進入單一頁面的編輯模式。 \n 配置 - 設定網站 - 編輯頁面標題與管理員密碼。 \n 搜尋 - 動態頁面內容的關鍵字搜尋。 \n IUpload  - 圖片檔案上傳 - 圖檔的上傳功能，可以上傳jpg、png和gif文件，其中若在手機上傳圖文件，系統會自動將圖片檔案縮小為800x800大小。 \n IList  - 圖片檔案清單 - 上市可以直接在頁面編輯模式中引用的圖片檔案。 \n FUpload  - 檔案上傳 - 一般檔案的上傳功能，目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl '、'txt'、'html'、'mp4'等，使用者可以自行修改。 \n FList  - 文件清單 - 上市可以直接在頁面編輯模式中引用的上傳文件。 \n 登出 -登出頁面編輯模式。 \n 轉換 - 將動態網站中位於 config/content.htm 文件，透過分頁設定轉為內容目錄中的靜態網頁。 \n acp  - git add、git commit 和 git Push，通常只能在 localhost 或自架主機上網頁表單協助將以太坊改版內容推送到 Github 使用。 \n SStatic  - 啟動靜態網站 - 利用Python啟動網站伺服器功能，可以讓使用者檢查轉檔後的靜態網站內容。 \n RStatic  - Replit 靜態網站 URL - 僅用於 Replit 模式，當使用者點擊 SStatic 後，可以點擊 RStatic 進入尚未推向 Github Pages 的靜態網站。 \n 80  - 由 init.py 中 static_port 決定的連結字符串，一般不使用 80，僅在 Replit 中為了與動態網站佔用端口，才特別設為 80。 \n \n", 'tags': '', 'url': 'Cmsimde.html'}, {'title': 'Replit', 'text': 'replit_main2.7z \n 可以利用\xa0 python3 main2.py查看靜態網站 \n https://replit.com \n 利用 init_replit 指令安裝所需 Python 模組 chmod u+x init_replit  ./init_replit \n 複製時： \n .replit：python3 main.py \n chmod u+x cms init_replit \n ./init_replit \n 對於 cmsimde_site （不需要）： git submodule update --init --recursive \n 對於 cmsimde：pip installflaskflask_corsbs4lxmlpelicanmarkdowngevent \n 密碼產生器：\xa0  https://mde.tw/cmsite/content/Brython.html ?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3485858500000m Python \xa0 \n \n 僅適用於 IPv6 Ubuntu： .ssh 目錄中的配置，將 SSH 會話名稱設為 github.com： 主機 github.com 使用者 git 主機名稱 github.com  ProxyCommand /usr/bin/ncat --proxy p4.cycu.org: 3128 - -proxy-type http %h %p  for Replit:  .ssh 目錄中的配置，將 SSH 會話名稱設為 github.com: 主機 github.com 用戶 git 主機名稱 github.co  #since Replit 適用於IPv4，因此沒有ProxyCommand 設定需要 #ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'Bython', 'text': 'https://en.wikipedia.org/wiki/Python_（程式語言） \n 例子： \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python教學： \n https://docs.python.org/3/tutorial/ \n Python 的非正式介紹 \n 縮排（Python 採用 4 個 Spaces 縮排，以介面執行範圍） \n 變數（ Python 關鍵字 ） \n 註（#單行註解、三單標註或三雙標註標註多行註解） \n 數 (整數 int(), 浮點數 float()) \n 字串 （字符串） \n print (Python 內建函數,  print() 函式) \n Python是控制流程工具 \n 為了 \n 如果 \n 範圍 \n 打開 \n 讀 \n 清單 \n 元組 \n 字典 \n 功能 \n 嘗試...除了 \n 休息 \n 經過 \n 類別 \n 此頁面示範如何在同一頁面下納入多個線上Ace編輯器與執行按鈕（ practice_html.txt 動態頁面超檔案）。 \n Practice_html.txt 動態頁面超檔案應該可以在啟動 Brython 時，設定會將 .py 檔案放入 downloads/py 目錄中引用。 \n 也即將所有對應的 html 也使用 Brython 產生，然後編寫為 類別 後，在範例匯入時透過 實例 引用。 \n <!-- 啟動 Brython --> \n<腳本> \n視窗.onload=函數(){ \nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']}); \n} \n</腳本> \n 從1累加到100： \n 1 加到 100 \n 將 iterable 與 iterator 相關說明 ，利用 Brython 與 Ace Editor 整理在此頁面。 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n 檔案名稱： .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n 跑步   輸出   明確輸出區 清晰的繪圖區 重新載入 \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束  \n \n  ##########################################  \n 從1累加到100第2部分： \n 1 加到 100 cango_三_齒輪 BS蛇 人工智慧俄羅斯方塊 旋轉塊 \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n 檔案名稱： .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n 跑步   輸出   明確輸出區 清晰的繪圖區 重新載入 \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': 'Bython.html'}]};
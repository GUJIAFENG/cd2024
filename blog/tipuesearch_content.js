var tipuesearch = {"pages":[{"title":"About","text":"cmsimde 內容管理系統 倉儲: https://github.com/GUJIAFENG/cd2024 網站: https://gujiafeng.github.io/cd2024/content/index.html 簡報: https://mdecd2024.github.io/2b-midbg8/reveal/ 網誌: https://gujiafeng.github.io/cd2024/blog","tags":"misc","url":"./pages/about/"},{"title":"2024 Spring W18 課程","text":"2024 協同產品設計W18課程 課程活動 期末考周 模擬影片 心得 今天是協同產品設計的最後一次上課，今天只要填完自評核點完名就可以下課了，不過我還有留下來繼續看有沒有甚麼漏掉的，後來發現好像要做報告，之後我留到4點才回家。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w18","url":"./2024-Spring-w18-blog-tutorial.html"},{"title":"2024 Spring W17 課程","text":"2024 協同產品設計W17課程 課程活動 期末自評 自評 實習一 實習二 實習三 Please enable JavaScript to view the comments powered by Disqus. Please enable JavaScript to view the comments powered by Disqus.","tags":"w17","url":"./2024-Spring-w17-blog-tutorial.html"},{"title":"2024 Spring W16 課程","text":"2024 協同產品設計W16課程 課程活動 期末作業 在建立好模型後匯入到已有的.ttt檔的範本後將原本的機器人改成我自己畫的機器人，但是在模擬後他的前輪會自動轉90度，就算我用旋轉還是會自己跑回90度，目前雖然 會動，但他的移動方式不是很正常 程式 ''' pip install pyzmq cbor keyboard from zmqRemoteApi import RemoteAPIClient from zmqRemoteApi_IPv6 import RemoteAPIClient import keyboard import random import math client = RemoteAPIClient('2001:b011:b807:37e6:f30b:3972:ce44:863c', 23000) #client = RemoteAPIClient('2001:288:6004:17:2023:cda:4:6', 23000) print('Program started') sim = client.getObject('sim') #sim.startSimulation() print('Simulation started') v=8 a=40 #選擇控制的球員 player='/a_player1' #player='/a_player2' #player='/a_player3' #player='/a_player4' #player='/b_player1' #player='/b_player2' #player='/b_player3' #player='/b_player4' def setVelocity(lfwV, rfwV,lbwV, rbwV): leftMotor1 = sim.getObject(player+'/joint_lf') rightMotor1 = sim.getObject(player+'/joint_rf') leftMotor2 = sim.getObject(player+'/joint_lb') rightMotor2 = sim.getObject(player+'/joint_rb') sim.setJointTargetVelocity(leftMotor1, lfwV) sim.setJointTargetVelocity(rightMotor1, rfwV) sim.setJointTargetVelocity(leftMotor2, lbwV) sim.setJointTargetVelocity(rightMotor2, rbwV) #輸入四個變數分別給四個軸速度 def setangel(y): ontology= sim.getObject(player) angel = [90*math.pi/180, y*math.pi/180, 0*math.pi/180] leftMotor = sim.getObject(player+'/joint_lf') rightMotor = sim.getObject(player+'/joint_rf') sim.setObjectOrientation(leftMotor, ontology, angel) sim.setObjectOrientation(rightMotor, ontology, angel) #輸入一個變數改變前輪方向 def controlangel(y): if keyboard.is_pressed('a'): setangel(-y) elif keyboard.is_pressed('d'): setangel(y) else: setangel(0) def turnover(): floor= sim.getObject('/Floor') player1 = sim.getObject(player) a=sim.getObjectOrientation(player1,floor) b=sim.getObjectPosition(player1,floor) a[0]=0 a[1]=0 b[2]=0.3 sim.setObjectPosition(player1,floor,b) sim.setObjectOrientation(player1,floor,a) def playercontrol(x,y): if keyboard.is_pressed('w'): setVelocity(x,x,x,x) controlangel(y) elif keyboard.is_pressed('s'): setVelocity(-x,-x,-x,-x) controlangel(y) elif keyboard.is_pressed('a'): setVelocity(-x,x,-x,x) elif keyboard.is_pressed('d'): setVelocity(x,-x,x,-x) elif keyboard.is_pressed('space'): turnover() elif keyboard.is_pressed('q'): # stop simulation sim.stopSimulation() else: setVelocity(0, 0, 0, 0) setangel(0) while True: if keyboard.is_pressed('shift'): playercontrol(v+4,a-20) else: playercontrol(v,a) 目前問題應該是出在這邊 ''' def setangel(y): ontology= sim.getObject(player) angel = [90*math.pi/180, y*math.pi/180, 0*math.pi/180] leftMotor = sim.getObject(player+'/joint_lf') rightMotor = sim.getObject(player+'/joint_rf') sim.setObjectOrientation(leftMotor, ontology, angel) sim.setObjectOrientation(rightMotor, ontology, angel) #輸入一個變數改變前輪方向 Please enable JavaScript to view the comments powered by Disqus.","tags":"w16","url":"./2024-Spring-w16-blog-tutorial.html"},{"title":"2024 Spring W15 課程","text":"2024 協同產品設計W15課程 課程活動 製作鋼球組立件 分工 41023132:鋼球組裝 41039138:在CoppeliaSim添加旋轉和球接讓它旋轉 心得 今天把接頭都用好了，確認可以轉了，之後就剩下motor旋轉時其他的零件不會跟他一起轉，現在的motor是旋轉360度的。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w15","url":"./2024-Spring-w15-blog-tutorial.html"},{"title":"2024 Spring W14 課程","text":"2024 協同產品設計W14課程 課程活動 在2bstud-2bsite 提交作業 老師在discussions開啟了球平衡台零組件與 NXOpen Python 程式回報區，但我們目前只有交prt檔而已， 心得 在錄製程式時，把零件畫好後停止錄製，但在play .py檔時會出現錯誤，目前還在找原因。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w14","url":"./2024-Spring-w14-blog-tutorial.html"},{"title":"2024 Spring W13 課程","text":"2024 協同產品設計W13課程 課程活動 各週指定任務 cd2024 協同產品設計實習課程專案的內容, 主要延續 CAD2023 課程重點, 然後再透過分組, 利用 Odoo PLM 相關文獻閱讀與應用作為協同產品開發流程的參考, 實際進行鋼球平衡台與綜合球賽機器人模擬系統的協同設計 各週指定任務如下: 個人 cd2024 與分組倉儲的建立及維護. 各分組註冊一個 Odoo 帳號, 選用免費的 PLM 模組, 取得各分組的產品生命週期 管理系統網域, 並將參考論文的協同翻譯流程作為工作項目, 在各分組的 PLM 網域系統中留下任務分配與紀錄, 最終產出為一份 參考論文 的中英文翻譯並列 pdf 檔案, 其中包含各組員的心得報告. 指定在參考論文的翻譯與閱讀過程, 將各組員的 cd2024 課程倉儲納為分組倉儲的子模組, 可以將各組員倉儲中的 LaTeX 原始資料, 整合 至分組倉儲中, 採 Github Actions 或近端使用 MikTeX 建立 分組的參考論文閱讀報告 pdf 檔案 (教學) . 要求各分組採協同方式, 在各 教學影片 上填上字幕並 嵌入個人網站, 分工整理影片逐字稿與教學重點, 最後完成期中自評, 在期中考週將自評 成績送至教務處. 要求 下載 Siemens NX 1872 至個人隨身碟或電腦 (含筆 電), 後續專案系統的零組件繪圖可採電腦輔助設計室固態硬碟所安裝的 NX1872 或隨身碟中的可攜系統, 必須透過連網取得認證後才能開啟. 提醒 CoppeliaSim 不同版本中存檔上的差異, 並強調 cd2024 將沿用 cad2023 課程中所使用的 4.5.1 版. 提示 各分組可以利用可攜式 Sourcetree 套件, 在近端充分了解個人倉儲與分組倉儲的各種 改版或解決衝突議題. 在 第七週 摘要出 cd2024 各項分組協同模式的要點及執行方法. 在 第八週 說明如何應用 AI 協助先前閱讀論文, 整理資料以及延伸模擬 程式的方法, 並提出既存鋼球平衡台控制與模擬的實習步驟. 第十週 起, 要求學員完成三項實習任務. (建立倉儲與網站連 結、PID 控制文獻整理、NX 平台零組件繪圖) 第十二週 的三項實習任務 (NXOpen 零組件繪製、分組倉儲設為 評分倉儲子模組、足球機器人場景模擬). 課程評分: 學員每週編寫網誌內容佔 40% 每週上課內容摘要與分組報告執行分工及進度整理 相關資料收集與閱讀心得 分組期中報告佔 20% 分組期中 pdf 報告與 mp4 簡報影片 每組至多 8 人 期中報告題目: ODOO PLM 在協同產品設計上的應用 - 以鋼球平衡台機電控制系統設計為例 分組期末報告佔 40% 分組期末 pdf 報告與 mp4 簡報影片 期末報告題目: 網際綜合球類競賽機器人協同設計與模擬 競技場景中必須納入數位計時器與類比記分機構 每場競技時間為 10 分鐘 每隊球員機器人依照各組人數平均分為兩隊 每位機器人球員必須同時具備踢球、取球與投球機構 雙方陣營各有足球門與籃球框各一具 球場中由裁判程式於開場時, 在球場正中央落下 10 球 將球踢進對方球門者得 1 分, 將球投入對方籃框者得 5 分 心得 這禮拜老師在blog中列出了每周實習任務和評分標準，後來發現我們缺少了期中報告，之後我們會再補上。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w13","url":"./2024-Spring-w13-blog-tutorial.html"},{"title":"2024 Spring W12 課程","text":"2024 協同產品設計W12課程 課程活動 NXOpen 實習項目一 由組員41023132負責 將各分組倉儲設為評分倉儲的子模組 在codespace添加 git submodule add https://github.com/mdecd2024/2b-midag8 g8，之後就可以推上去了。 cd2023足球機器人網際場景模擬 到此 倉儲 的downloads\\zmq_football 目錄下下載相關檔案即可開始模擬，要將IP改成目前IP 模擬 得分 心得 這次作業要用足球機器人網際場景模擬，但下載後，第一次模擬沒有成功他出現找不到要import的資料夾，後來我就重新創了資料夾和放入相關的 檔案而且檔名是跟程式一樣的，但還是失敗，最後我乾脆在重用一次，然後就成功的，之後就錄成影片傳上去。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w12","url":"./2024-Spring-w12-blog-tutorial.html"},{"title":"2024 Spring W11 課程","text":"2024 協同產品設計W11課程 課程活動 用NX1872繪圖 這周作業要用NX1872使用python檔案去生成零件，還要用老師給的鋼球零件尺寸去畫圖，這周作業難度不算太難，但是我用USB可攜系統NX1872開啟時跑不太動還會當機， Solvespace開啟時都會全黑連小視窗也會全黑，但我用同學電腦開時就沒有問題，所以我只能先記部分零件的尺寸先用NX12來畫之後上課時再用學校的NX1872來畫。 Bython Brython ''' from browser import window , ajax def fetch_csv_data (): # CSV 檔案網址 url = \"https://mdecd2024.github.io/2bstud-2bsite/downloads/2b.txt\" def on_complete ( req ): if req . status == 200 or req . status == 0 : # 讀取 CSV 檔案內容 content = req . text # 打印結果 window . console . log ( content ) else : window . console . log ( \"Error:\" , req . text ) # 發送 AJAX 請求 req = ajax . ajax () req . bind ( 'complete' , on_complete ) req . open ( 'GET' , url , True ) req . set_header ( 'content-type' , 'application/x-www-form-urlencoded' ) req . send () #呼叫函式讀取 CSV 資料 fetch_csv_data () ''' 新增Disqus 在markdowm文件添加Disqus HTML 在/.gen_blog 就不會被刪掉，如果直接加在HTML中會被刪掉。 心得 這周要用NX1872畫圖，不過在用USB開NX1872時，去發現他跑不動，所以我現在只能用空閒的時間用學校的電腦畫了，這禮拜我還為每個blog新 增了Disqus留言區，不過這部分班上好樣沒甚麼人用這塊，我是在看老師的網頁無意中看到才去用的，不然我一般只會看blog說要做甚麼作業， 然後最近教同學新增Disqus時發現他網誌都有寫但他都沒有用./gen_blog指令導致他都有寫網誌但blog卻沒顯示，這部份是我們常會沒注意的 部分，雖然我之前也常常忘記。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w11","url":"./2024-Spring-w11-blog-tutorial.html"},{"title":"2024 Spring W10 課程","text":"2024 協同產品設計W10課程 課程活動 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行作業 文章摘要 建立各班學員的倉儲、網站與分組連結 加入老師給的連結classroom 鋼球平衡台零組件繪圖 根據 Solvespace_model零件尺寸採用電腦安裝的 NX1872 或隨身碟中的 NX1872執行零組件繪圖 cd2024_2D Ball Balancer Control using QUARC 此文章是關於「2D 球平衡器實驗」的指導手冊。實驗的目標是穩定球在平衡板上的位置，並使用比例-積分-微分（PID）控制系統來滿足一組規格要求。實驗涵蓋了以下主題： - 從第一原理建立球的動態模型。 - 獲取系統的傳遞函數表示。 - 設計比例-速度（PV）補償器，以控制伺服負載軸的位置，符合某些時域要求。 - 設計比例-積分-微分（PID）補償器，調節樑上球的位置，滿足特定規格。這與伺服控制一起構成完整的球和樑串級控制系統。 - 探索控制技術，如設定點權重和積分反飽和。 - 使用植物模型模擬球和樑控制，確保滿足規格，並避免任何致動器飽和。 - 在 Quanser 2DBB 裝置上實施控制器並評估其性能。 在先修條件方面，使用者應熟悉以下內容： - 數據收集卡（例如 Q2-USB）、功率放大器（例如 VoltPAQ）和 SRV02 的主要組件（例如致動器、感應器）。 - SRV02 植物與放大器和 DAQ 設備的連線和操作程序。 - 在 Reference [6] 中描述的實驗室，以便熟悉在 SRV02 上使用 QUARC。 - 根據 Reference [8] 的要求為 SRV02 設計 PV 位置控制。 該文件還包含了有關模型方程式、控制響應設計、實驗室程序和結果摘要等詳細內容。 Ball_on_the_plate_balancing_control_system 文章中介紹了一個建構雙自由度球在盤系統實驗平台的設計,用於控制系統的學習和測試不穩定動態物體的平衡技術。該平台配備了電阻式觸控螢幕來獲取球的位置資料,步進電機和位置傳感器來調整平台傾斜角度,以及基於AVR微控制器的雙迴路從屬控制系統,內含PID控制器用於維持球的平衡位置。 該實驗平台的機械設計由木質基座、印刷成型的3D支撐塔、電阻式觸控螢幕、步進電機和位置反饋電位器組成。控制系統採用100Hz頻率操作,讀取球和平台傾斜角的資訊,並使用外環控制球位置、內環控制平台角度的從屬PID控制器設計。 實驗結果顯示,控制系統能夠將鋼球帶回並維持在觸控螢幕的中心點,即使受到外部干擾。該實驗平台可用於測試控制算法,對於船舶、航空器等穩定性控制應用有一定參考價值。未來的工作包括改進反饋信號濾波以提高控制質量,以及探索更複雜的delta機器人控制問題。 Design and Implementation a Ball Balancing System for Control Theory Course 這篇論說明在開發一個球在桿平衡系統,作為控制理論課程的教學工具。該系統使用微控制器和相關的控制算法,透過實時感測反饋來調整桿的角度,使球保持在預設位置平衡。 作者設計了三代原型,並逐步優化了系統的穩定性、輕量化和便攜性。最終採用了木頭材質,包括一根安裝有伺服電機的桿、超聲波感測器、Arduino微控制器板和電路連接板。 該系統採用PID控制算法,根據球的實際位置與預設點的偏差,調節桿的傾角以最小化誤差。還引入了自適應PID控制,根據誤差大小動態調整PID參數,提高控制效率。 另外,作者開發了MATLAB介面程式,能夠實時獲取並繪製球的位置曲線,幫助學生理解反饗環控制原理。 這個簡單的球平衡系統,集成了感測器、執行器、微控制器編程和控制算法等內容,非常適合用於控制理論課程的實踐教學,可以讓學生將理論知識與實際操作相結合,幫助培養實踐能力。該方法也可推廣應用於更複雜的控制系統。 Simulation_and_Experimental_Study_of_Ball_Position 本篇論文針對雙軸平台上的球平衡控制系統,詳細設計並比較了三種控制結構:PD控制器、全狀態迴饋和具有狀態觀測器的全狀態迴饋。所有控制結構均採用相同的參數設計方法,針對預設的建立時間進行極點置換。 首先導出了球在平台上的數學模型和傳遞函數,揭示了開環系統的本質不穩定性。接著設計了永磁直流電機的位置環用於控制平台傾角,並透過標準設計方法確保所需的動態回應。 實驗平台由電阻式觸控屏、永磁直流電機、Kinetis K60數位控制器等組成。三種控制結構的仿真和實驗結果顯示,具有狀態觀測器的結構效果最佳,能夠有效抑制噪聲並實現穩定控制和軌跡追蹤。 此外,文中還提供了相關的數學推導過程,以及詳細的控制系統設計方法。該球平衡平台不僅可用於驗證各種控制理論,還有助於讓學生更直觀地理解控制原理,結合理論知識與實踐操作,成為極具教學價值的系統。 A real time control system for balancing a ball on a platform with FPGA parallel implementation 本篇論文提出一種新的基於PID控制器的解決方案,可以在實時系統中精準控制球體在平台上的位置。首先,建立了球體在平台上的運動數學模型並推導出其傳遞函數。接著,設計了PID控制器用於平衡球體在平台上的位置。該PID控制器的實作採用了FPGA上的並行計算架構,可顯著提高計算效率。最後,通過Matlab仿真驗證了該控制系統調節球體在平台上位置的精度。該PID控制器設計可以應用於需要對多個參數進行高速實時控制的物件系統中。 Construction and theoretical study 這篇論文的摘要涵蓋了控制理論及其應用對動態系統的重要性，特別是在補償對於本身不穩定或半穩定系統施加的干擾和外部行為方面。通過建構一個實物裝置來展示理論，並進一步比較從牛頓力學中得出的實際物理和電腦模擬結果。為了進行比較，設計一個滿足系統要求的滿意控制器是必要的。在裝置和控制方面，引入了一個比例-積分-微分（PID）控制器，用於平衡平台上的球。進一步進行分析以確定在穩定自然不穩定或半穩定系統時的限制，並檢查這些限制與理論期望之間的差異。 整篇論文中應用的控制是線性類型，僅能在線性控制範圍內正常運作。使用標準元件和微控制器，構建了一個裝置來維持平台上的球。通過使用Arduino庫和開源代碼進行編程。因此，出於研究目的，看看該裝置是否能夠在線性控制領域內正常運作。 總之，這篇論文將首先通過計算機輔助程序來涵蓋球在平台上的理論模型。然後將理論結果與從實物構造中獲得的結果進行比較。進一步檢查控制理論和系統實施方面的差異原因。 心得 這次作業利用 PID 控制 CoppeliaSim 鋼球平衡台場景 ZMQ RemoteAPI Python 程式，結束後用matplotlib 畫出來可藉由改變 controlMotor(0.3, 0.3, 0.05) 三個參數實現不同的座標繪製。 controlMotor(0.3, 0.3, 0.05) 分別為最終期望的X Y 座標和模擬時間步長，在模擬過程中還發現q鍵按下的時機也會改變座標的圖形剛 開始模擬都達不到老師給的圖形後來發現我模擬的時間不夠長，之後再用久一點出來的表就跟老師一樣了。 而摘要的部分，老師說可以多利用AI，所以我是把PDF丟給Claud 3 讓他生成出摘要，省了我不少的時間。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w10","url":"./2024-Spring-w10-blog-tutorial.html"},{"title":"2024 Spring W9 課程","text":"2024 協同產品設計W9課程 課程活動 期中考週 進入自評連結填入個人帳號、組別和自評分數 Please enable JavaScript to view the comments powered by Disqus.","tags":"w9","url":"./2024-Spring-w9-blog-tutorial.html"},{"title":"2024 Spring W8 課程","text":"2024 協同產品設計W8課程 課程活動 進度補齊 補齊之前作業內容 markdown語法介紹 Please enable JavaScript to view the comments powered by Disqus.","tags":"w8","url":"./2024-Spring-w8-blog-tutorial.html"},{"title":"2024 Spring W7 課程","text":"2024 協同產品設計W7課程 課程活動 本周放假 回顧之前課程內容 個人和團隊協同模式 分組網站內容的協同 : 其中包括章節式的網站內容與網誌內容, 可以透過 Python 程式方法整合各學員子模組中的 config/content.htm 以及 markdown/*.md 檔案至分組網站中。 分組報告內容的協同 : 採用的是 Github Actions 與近端 MikTeX 中的 xelatex 將 .tex 轉為 pdf 的整合過程 分組產品設計的 PLM 協同: 採用的是 Odoo PLM 模組, 讓各分組可以將網站內容、報告內容視為產品, 從協同架構的訂定作為起點, 完成資料展示作為終點, 逐一將過程的協 調、派任與執行方法納入 PLM 系統管理 分組零組件設計的協同 : 採用 Solvespace 作為鋼球平衡台範例, 讓學員使用 Siemens NX 1872 進行協同零組件繪圖設計, 並將各零件的 .prt 檔案納入各學員的倉儲進行組 立, 以便找出最佳的設計分工以及零組件轉檔流程 分組模擬場景設計的協同 : 當各分組順利完成鋼球平衡台的零組件轉檔後, 一旦進入 CoppeliaSim 場景後, 必須逐一配置感測器, 主要探討如何將此一場景模擬過程在 CoppeliaSim XML 檔案格式與 Siemens NXOpen Python 零件程式檔案間, 找到合用或最佳的協同產品設計模式. 分組專案簡報設計的協同 : 在上述各產品設計階段所累積的各種資料, 該如何有效整合到專案完成後必須進行的網際簡報中. 分組產品設計的 PLM 協同 Odoo 是一套主要利用 Python 與 Javascript 編寫的網際資料管理系統, 資料庫採用 PostgreSQL, 協同產品設計實習則利用 Odoo 的 PLM 模組執行產品生命週期管理. 其中希望將 LaTeX 報告與 Odoo PLM 參考論文的閱讀及翻譯作為各組協同設計的產品, 各組員可將協同過程中的討論、規則訂定與時程規劃透過 PLM 進行管理. Please enable JavaScript to view the comments powered by Disqus.","tags":"w7","url":"./2024-Spring-w7-blog-tutorial.html"},{"title":"2024 Spring w6 課程","text":"2024 協同產品設計W6課程 課程內容 ODOO PLM 論文中英並列任務 將論文用成中英並列後並在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf製作 修改main.yml 設定 在.github/workflows下的main.yml點進去修改 在sudo apt install -y texlive的下一行新增 name: Initialize submodules run: git submodule update --init --recursive 心得 這禮拜課程進度主要修改了團隊main.yml的內容和製作中英並列的論文翻譯，還有下載可攜式的NX檔案中英並列的論文翻譯，不過我們組只有兩 個人，要翻譯的文字量非常多，當時又想在一個晚上的時間做好一半的翻譯，那時候做了非常久，用word中英文加起來可能有一萬多的字，做好的 當下讓我有一種解脫的感覺，終於可以休息了。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w6","url":"./2024-Spring-w6-blog-tutorial.html"},{"title":"2024 Spring W5 課程","text":"2024 協同產品設計W5課程 課程活動 教學影片和自評 各組進行分工要將所有影片上字幕和寫逐字稿並自評 統整網誌 利用 NX1872 協同繪製零組件 從BGA0810的電腦 C:\\Program Files\\Siemens\\NX1872 取得NX 套件目錄檔案, 再將 NX1872 目錄存入隨身碟後, 可利用 start_USB_nx1872.bat 啟動 start_USB_nx1872.bat 可以啟動 USB 隨身碟中的 NX1872, 但必須自行在 NX1872 目錄中新增 temp 目錄用來儲存 NX 的 Syslog 系統狀態檔案. 心得 今天作業是製作逐字稿，我將教學影片用成mp4後，丟到whisper Desktop請他自動產生txt檔，和srt檔之後對照影片確認去對稿，好了之後再 用上字幕的軟體將MP4和srt檔丟進去之後就開始播放影片看字幕塊有沒有跟聲音一致，還可以順便校閱第二次稿，好了之後在輸出成mp4檔，這過 程還蠻快速的，比自己照影片打字快很多，不過要處理的影片比較多目前還沒用好，之後再貼上去。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w5","url":"./2024-Spring-w5-blog-tutorial.html"},{"title":"2024 Spring W4 課程","text":"2024 協同產品設計W4課程 課程活動 利用Code spaces 進行改版 首先進入到Code spaces 打指令chmod u+x init_replit 接著在打./init_replit 將執行動態所需的python模組導入，好了之後就可以開始執行python3 main.py 它就會幫我們轉到8080連接到443，之後我們就可以開始編輯網站了，編輯好後要上傳十可以先git pull 如果出現rebase 要先打 git config rebase flase將rebase 用成flase之後就可以git pull 和 git push 用Gitpod and Token取得改版權限 進入到Gitpod先到C裡面的.git目錄下之後打 Vi config 就可以編輯Token了，之後再將你的Token貼上去後面加@之後就可以儲存了 用Replit 檢視靜態網站 只要將老師給的 main2.py檔案傳上去之後步驟跟開動態一樣只不過靜態是要打python3 main2.py 心得 今天用codspaces創建資料夾latex、images和.github/workflows並上傳資料並用git add .推好之後用Action的功能去run，之後再 到.gitignore改程序碼讓他去刪除latex的臨時文檔，用好之後我們這組把已完成的翻譯用成latex傳上去，今天課程活動較上禮拜多一些，今 天主要的問題是Action的ALL workflows沒有東西，後來發現我們在codespaces創資料夾的時候少打/workflows，結果這個錯誤讓我們用 了好久。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w3","url":"./2024-Spring-w4-blog-tutorial.html"},{"title":"2024 Spring W3 課程","text":"2024 協同產品設計W3課程 團隊子模組 今天課程要用codespaces將自己的github帳戶添加到團隊的子模組下 STEP1 進入團隊的codespaces STEP2 使用 git clone recourse submoules git@自己倉儲網址.git 帳號名稱 STEP3 git add. STEP4 git commit -m\"輸入你要打的字\" STEP5 之後再git push 推上去，推上去前可以git pull看看 最後到團隊的Code選項去那邊看有沒有推成功，成功的話就會出現在頁面上 心得 這週利用Codespaces把自己github加入到團隊的子模組中，之後也可以利用codspaces來維護倉儲，相較於之前用可攜系統進入到網頁修改， 這學期的方法較多元且快速和方便。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w3","url":"./2024-Spring-w3-blog-tutorial.html"},{"title":"2024 Spring W2 課程","text":"2024 協同產品設計W2課程活動。 課程說明: 1.利用github classroom進行分組 2.利用code spaces維護倉儲 3.網誌設定 團隊分組: 組別：八 組員:41039138 41023132 倉儲:https://github.com/mdecd2024/2b-midbg8 課程活動: 各組組員具備對分組倉儲有改版的權限, 但是若將分組倉儲 import 到 Replit, 因倉儲位於 mdecd2024 帳號下， 其倉儲擁有者為 mdecd2024,因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在.ssh目錄中建立ｃonfig, 且將倉儲 .git/config 中的 https 協定改為 SSH。 不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料,因此若要使用 Replit 維護從 Github Classroom取得授權 的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案。 網誌設定 :要編寫網誌可到markdown目錄下新增.md檔檔名不可重複1-12行為固定格式不可隨意更動，剛開始還需要到 local_publishconf pelicanconf.py publishconf.py 這三個檔案裏面去做設定 網誌教學影片 若要查看網誌可在shell打 chmod u+x gen_blog Enter後再打./gen_blog 之後按Run在靜態中查看沒問題就推上去 心得 今天要先分組找組員並確認組別，然後用github教室創建組別並把組員加進去，好了之後小組成員就要開始添加github項目的內容了，這一步比 較困難當時用了很久了。 Please enable JavaScript to view the comments powered by Disqus.","tags":"w2","url":"./2024-Spring-w2-blog-tutorial.html"},{"title":"2024 Spring W1 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload Please enable JavaScript to view the comments powered by Disqus.","tags":"w1","url":"./2024-Spring-w1-blog-tutorial.html"}]};